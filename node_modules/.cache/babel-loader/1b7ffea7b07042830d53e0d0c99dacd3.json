{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\MyApp\\\\jsx\\\\src\\\\FlagPickSearchForm.js\";\nimport React from 'react';\nimport FlagPickSearchBox from './FlagPickSearchBox';\nimport { Card, Image } from 'semantic-ui-react';\nimport { Checkbox } from 'semantic-ui-react';\nimport './FlagPickSearchForm.css';\n\nclass FlagPickSearchForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      continent: '',\n      country: [],\n      continentSuggestions: [],\n      countrySuggestions: []\n    };\n\n    this.onFormSubmit = event => {\n      event.preventDefault();\n      this.props.onSubmit(this.state);\n    };\n\n    this.selectedCountrySuggestion = country => {\n      this.setState({\n        country\n      });\n    };\n\n    this.selectedContinentSuggestion = continent => {\n      console.log(continent);\n      this.setState({\n        country: [],\n        continent,\n        continentSuggestions: []\n      });\n      this.tempCountryArray = [];\n    };\n\n    this.onCheckboxSelect = label => {\n      this.tempCountryArray = [...this.tempCountryArray, label];\n      this.setState({\n        country: this.tempCountryArray,\n        countrySuggestions: []\n      });\n    };\n\n    this.onCheckboxDeselect = label => {\n      this.tempCountryArray = [...this.tempCountryArray].filter(country => country !== label);\n      this.setState({\n        country: this.tempCountryArray,\n        countrySuggestions: []\n      });\n    };\n\n    this.onCheckboxChange = (event, data) => {\n      console.log(data);\n      data.checked === true ? this.onCheckboxSelect(data.label) : this.onCheckboxDeselect(data.label);\n      this.countryList.forEach(c => {\n        if (c.name === data.label) {\n          c.defaultChecked = data.checked;\n          console.log(\"done\");\n        }\n      });\n    };\n\n    this.setContinent = event => {\n      let suggestions = [];\n      console.log(event.target.name);\n      console.log(event.target.value);\n      const regex = new RegExp(`^${event.target.value}`, 'i');\n      suggestions = this.continentList.map((continent, index) => {\n        return regex.test(continent) ? React.createElement(\"li\", {\n          onClick: () => this.selectedContinentSuggestion(continent),\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, continent) : null;\n      });\n      this.setState({\n        continentSuggestions: suggestions,\n        [event.target.name]: event.target.value,\n        country: [],\n        countrySuggestions: []\n      });\n    };\n\n    this.setCountry = event => {\n      if (this.state.continent) {\n        console.log(event.target.name);\n        console.log(event.target.value);\n        console.log(this.state.countrySuggestions);\n        let suggestions = [];\n        const regex = new RegExp(`^${event.target.value}`, 'i');\n        const countryListPerContinent = this.state.continent ? this.countryList.filter(country => {\n          return country.value === this.state.continent;\n        }) : [];\n        suggestions = countryListPerContinent.map((country, index) => {\n          //   return (regex.test(country.name)?(<li onClick={()=>this.selectedCountrySuggestion([country.name])} key={index}>{country.name}</li>):null);\n          return regex.test(country.name) ? React.createElement(\"li\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, React.createElement(Checkbox, {\n            onChange: this.onCheckboxChange,\n            checked: country.defaultChecked,\n            label: country.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          })) : null;\n        });\n        console.log(suggestions);\n        this.setState({\n          countrySuggestions: suggestions,\n          [event.target.name]: event.target.value\n        });\n      }\n    };\n\n    this.onContinentCountryChange = event => {\n      event.target.name === 'continent' && event.target.value.length > -1 ? this.setContinent(event) : this.setCountry(event);\n    };\n\n    this.continentList = ['Asia', 'Africa', 'North America', 'South America'];\n    this.countryList = [{\n      name: \"India\",\n      value: \"Asia\",\n      defaultChecked: false\n    }, {\n      name: \"Japan\",\n      value: \"Asia\",\n      defaultChecked: false\n    }, {\n      name: \"Luanda\",\n      value: \"Africa\",\n      defaultChecked: false\n    }, {\n      name: \"USA\",\n      value: \"North America\",\n      defaultChecked: false\n    }, {\n      name: \"Brazil\",\n      value: \"South America\",\n      defaultChecked: false\n    }, {\n      name: \"Argentina\",\n      value: \"South America\",\n      defaultChecked: false\n    }, {\n      name: \"South-Korea\",\n      value: \"Asia\",\n      defaultChecked: false\n    }, {\n      name: \"China\",\n      value: \"Asia\",\n      defaultChecked: false\n    }];\n    this.tempCountryArray = [];\n  }\n\n  render() {\n    const listOfCountries = this.countryList.map(country => {\n      return country.name;\n    });\n    console.log(this.state.country);\n    const selectedCountries = this.state.country.length > 0 && Array.isArray(this.state.country) ? this.state.country.map((c, index) => {\n      console.log(c);\n      return React.createElement(Card, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Image, {\n        size: \"large\",\n        src: require(`../images/${c}.png`),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })));\n    }) : [];\n    return React.createElement(\"div\", {\n      className: \"ui segment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"ui form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field suggestions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \" Continent \"), React.createElement(FlagPickSearchBox, {\n      forChange: this.onContinentCountryChange,\n      entity: \"continent\",\n      entityState: this.state.continent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.state.continentSuggestions))), React.createElement(\"div\", {\n      className: \"field suggestions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \" Country \"), React.createElement(FlagPickSearchBox, {\n      forChange: this.onContinentCountryChange,\n      entity: \"country\",\n      entityState: this.state.country,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, this.state.countrySuggestions))), React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, selectedCountries)));\n  }\n\n}\n\nexport default FlagPickSearchForm;","map":{"version":3,"sources":["D:/React/MyApp/jsx/src/FlagPickSearchForm.js"],"names":["React","FlagPickSearchBox","Card","Image","Checkbox","FlagPickSearchForm","Component","constructor","props","state","continent","country","continentSuggestions","countrySuggestions","onFormSubmit","event","preventDefault","onSubmit","selectedCountrySuggestion","setState","selectedContinentSuggestion","console","log","tempCountryArray","onCheckboxSelect","label","onCheckboxDeselect","filter","onCheckboxChange","data","checked","countryList","forEach","c","name","defaultChecked","setContinent","suggestions","target","value","regex","RegExp","continentList","map","index","test","setCountry","countryListPerContinent","onContinentCountryChange","length","render","listOfCountries","selectedCountries","Array","isArray","require"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FlagPickSearchBox from './FlagPickSearchBox';\r\nimport { Card, Image } from 'semantic-ui-react';\r\nimport { Checkbox } from 'semantic-ui-react';\r\nimport './FlagPickSearchForm.css';\r\n\r\n\r\n\r\nclass FlagPickSearchForm extends React.Component {\r\n  constructor(props){\r\n      super(props);\r\n      this.continentList = ['Asia','Africa','North America','South America'];\r\n      this.countryList = [{name:\"India\", value:\"Asia\",defaultChecked:false},\r\n                          {name:\"Japan\", value:\"Asia\",defaultChecked:false},\r\n                          {name:\"Luanda\", value:\"Africa\",defaultChecked:false},\r\n                          {name:\"USA\", value:\"North America\",defaultChecked:false},\r\n                          {name:\"Brazil\", value:\"South America\",defaultChecked:false},\r\n                          {name:\"Argentina\", value:\"South America\",defaultChecked:false},\r\n                          {name:\"South-Korea\", value:\"Asia\",defaultChecked:false},\r\n                          {name:\"China\", value:\"Asia\",defaultChecked:false}];\r\n      this.tempCountryArray=[];                    \r\n\r\n  }  \r\n  state = { continent: '',\r\n            country:[], \r\n            continentSuggestions:[],\r\n            countrySuggestions:[]\r\n          };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n  };\r\n  //country selection\r\n  selectedCountrySuggestion = (country) =>{\r\n    this.setState({country});\r\n  }\r\n  // continent selection\r\n  selectedContinentSuggestion = (continent) =>{\r\n    console.log(continent);\r\n      this.setState({country:[],continent,continentSuggestions:[]});\r\n      this.tempCountryArray = [];\r\n  }\r\n\r\n  onCheckboxSelect =(label) =>{\r\n    this.tempCountryArray = [...this.tempCountryArray,label];\r\n    this.setState({country:this.tempCountryArray,countrySuggestions:[]});\r\n   \r\n  }\r\n\r\n  onCheckboxDeselect =(label) =>{\r\n    this.tempCountryArray = [...this.tempCountryArray].filter(country => country !== label );\r\n    this.setState({country:this.tempCountryArray,countrySuggestions:[]});\r\n}\r\n\r\n  onCheckboxChange = (event,data) => {\r\n    console.log(data);\r\n   \r\n    data.checked === true?this.onCheckboxSelect(data.label):this.onCheckboxDeselect(data.label);\r\n    this.countryList.forEach(c =>{\r\n        if(c.name === data.label){\r\n          c.defaultChecked = data.checked;\r\n          console.log(\"done\");\r\n        }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  setContinent =(event) =>{\r\n    let suggestions = [];  \r\n    console.log(event.target.name);\r\n    console.log(event.target.value);\r\n    const regex = new RegExp(`^${event.target.value}`,'i');\r\n     \r\n    suggestions = this.continentList.map((continent,index) => {\r\n           \r\n        return (regex.test(continent)?(<li onClick={()=>this.selectedContinentSuggestion(continent)} key={index}>{continent}</li>):null);\r\n        \r\n    });\r\n    this.setState({continentSuggestions:suggestions, [event.target.name]:event.target.value,country:[],countrySuggestions:[]});\r\n  }\r\n\r\n  setCountry =(event) =>{\r\n    if(this.state.continent){\r\n        console.log(event.target.name);\r\n        console.log(event.target.value);\r\n        console.log(this.state.countrySuggestions);\r\n        let suggestions = [];\r\n        const regex = new RegExp(`^${event.target.value}`,'i');\r\n        \r\n        const countryListPerContinent = this.state.continent?this.countryList.filter((country) => {\r\n            return country.value === this.state.continent\r\n        }):[];\r\n        suggestions = countryListPerContinent.map((country,index) => {\r\n   \r\n         //   return (regex.test(country.name)?(<li onClick={()=>this.selectedCountrySuggestion([country.name])} key={index}>{country.name}</li>):null);\r\n return (regex.test(country.name)?(<li key={index} ><Checkbox onChange={this.onCheckboxChange}  checked={country.defaultChecked} label={country.name} /></li>):null);\r\n            \r\n        });\r\n        console.log(suggestions);\r\n        this.setState({countrySuggestions:suggestions,[event.target.name]:event.target.value});\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  onContinentCountryChange = event => {\r\n    \r\n     event.target.name === 'continent'&& event.target.value.length>-1?this.setContinent(event):this.setCountry(event);\r\n        \r\n  }\r\n\r\n\r\n  \r\n  render() {\r\n      \r\n    \r\n    const listOfCountries = this.countryList.map((country) =>{\r\n       return country.name;\r\n    });\r\n    console.log(this.state.country);\r\n    const selectedCountries = (this.state.country.length>0 && Array.isArray(this.state.country))?\r\n        this.state.country.map((c,index) => {\r\n         \r\n          console.log(c);\r\n          return (<Card key={index} >\r\n                      <Card.Content>\r\n                          <Image size='large' src={require(`../images/${c}.png`)} />\r\n                      </Card.Content>\r\n                  </Card>\r\n                 );\r\n    }):[];\r\n   \r\n    \r\n   \r\n    return (\r\n      <div className=\"ui segment\">\r\n        <form className=\"ui form\">\r\n          <div className=\"field suggestions\">\r\n            <label> Continent </label>\r\n            <FlagPickSearchBox  forChange={this.onContinentCountryChange} entity=\"continent\" entityState={this.state.continent}>\r\n               <ul>\r\n                 {this.state.continentSuggestions}\r\n               </ul>\r\n            </FlagPickSearchBox>\r\n           \r\n          </div>\r\n          <div className=\"field suggestions\">\r\n            <label> Country </label>\r\n            <FlagPickSearchBox forChange={this.onContinentCountryChange} entity=\"country\" entityState={this.state.country}>\r\n               <ul>\r\n                 {this.state.countrySuggestions}\r\n               </ul>\r\n            </FlagPickSearchBox>\r\n           \r\n          </div>\r\n          <Card.Group>\r\n            { selectedCountries }\r\n          </Card.Group>   \r\n        </form>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FlagPickSearchForm;"]},"metadata":{},"sourceType":"module"}